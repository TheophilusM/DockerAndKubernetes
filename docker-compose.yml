version: '3'
# with shared properties
services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./ngnix/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-api-app
      - nginx-web-app
      - mongodb
    restart: on-failure

  node-api-app:
    build: ./API
    ports:
      - '3000:3000'
    env_file:
      - ./API/.env
    environment:
      - MONGO_USER=rootuser
      - MONGO_PASSWORD=rootpass
    depends_on:
      - mongodb
    restart: on-failure

  nginx-web-app:
    build: ./Web
    ports:
      - '8080:80'
    environment:
      - PORT=8080
    command: npm start
    restart: on-failure

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    volumes:
      - mongo-db:/data
    restart: on-failure

  redis:
    image: redis

  proxy:
    image: proxy
    ports:
      - "80:80"

# all named volumes
volumes:
  mongo-db: {}


# run app:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d 
# docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d 

# to start specific services
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d <container-name>